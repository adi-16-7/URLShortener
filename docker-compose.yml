version: '3.7'

# services:
#   web:
#     build:
#       context: .
#     networks:
#       - tasknet
#     ports:
#       - 8004:80
#     volumes:
#       - ./src:/src
#       - ./start.sh:/start.sh
#     command: bash -c 'while !</dev/tcp/postgres_db/5432; do echo "waiting for db"; sleep 1; done; /start.sh'
#     environment:
#       - POSTGRES_USER=fdml
#       - POSTGRES_PASSWORD=fdml1234
#       - POSTGRES_DB=click_db
#       - POSTGRES_PORT=5432
#       - POSTGRES_HOST=postgres_db

#   postgres_db:
#     image: postgres
#     restart: always
#     ports:
#       - 6433:5432
#     volumes:
#       - ./database/postgres/docker-entrypoint-initdb:/docker-entrypoint-initdb.d/
#     expose:
#       - 5432
#     shm_size: 1gb
#     networks:
#       - tasknet
#     environment:
#       - POSTGRES_USER=fdml
#       - POSTGRES_PASSWORD=fdml1234
#       - POSTGRES_DB=click_db
#       - POSTGRES_PORT=5432
#       - POSTGRES_HOST=postgres_db

# networks:
#   tasknet:
#     name: task_network


services:
  db:
    image: postgres
    restart: always
    ports:
      - 6433:5432
    volumes:
      - ./data/db:/var/lib/postgresql/data
    expose:
      - 5432
    networks:
      - tasknet
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
  web:
    build: .
    restart: always
    networks:
      - tasknet
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - .:/code
      # - /var/run/docker.sock:/var/run/docker.sock 
    ports:
      - "8000:8000"
    environment:
      - POSTGRES_NAME=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    depends_on:
      - db

networks:
  tasknet:
    name: task_network